for (i in 1:length(dat[,1])) {
fl = TRUE
if(dat[i,1] >= mn && flag == FALSE && fl == TRUE){
fl = FALSE
}
if(dat[i,1] < mn && flag == FALSE && fl == TRUE){
flag = TRUE
R = R + 1
fl = FALSE
}
if(dat[i,1] >= mn && flag == TRUE && fl == TRUE){
flag = FALSE
R = R + 1
fl = FALSE
}
if(dat[i,1] < mn && flag == TRUE && fl == TRUE){
fl = FALSE
}
}
p = 0.954
t = 2
R_mn = (length(dat[,1]) + 1) / 2
sgm = sqrt(length(dat[,1]) - 1) / 2
flag = FALSE
if(round(R_mn - t*sgm) <= R && R <= round(R_mn + t*sgm)){
flag = TRUE
}
flag
#Сглаживание ряда методом скользящей средней
dat[,2] = movavg(dat[,1], 3, type = "s")
#Сглаживание ряда методом аналитического выравнивания
center = round(length(dat[,1]) / 2)
if(mod(length(dat[,1]), 2) == 1){
dat[center,3] = 0
for(i in 1:(center - 1)){
dat[center - i,3] = -i
dat[center + i,3] = i
}
}else{
for(i in 0:(center - 1)){
dat[center - i,3] = -(1 + 2*i)
dat[center + i + 1,3] = (1 + 2*i)
}
}
a_0 = (sum(dat[,1]) / length(dat[,1]))
a_1 = 0
for (i in 1:length(dat[,1])) {
a_1 = a_1 + dat[i,1]*dat[i,3]
}
a_1 = a_1 / sum((dat[3])^2)
for (i in 1:length(dat[,1])) {
dat[i,4] = a_0 + dat[i,3]*a_1
}
#Прогнозируем следующее значение
y_next = a_0 + a_1*((dat[length(dat[,3]), 3] - dat[length(dat[,3]) - 1, 3]) + dat[length(dat[,3]),3])
#Наносим всё на график
plot(myts, lwd = 3, col = "green", main="Time series", ylab = "Value")
lines(ts(dat[,2], start = c(2018,1), end = c(2019,7), frequency = 12), col = "red", lwd = 3)
lines(ts(dat[,4], start = c(2018,1), end = c(2019,7), frequency = 12), col = "blue", lwd = 3)
legend("bottomleft", legend = c("1", "2", "3"), fill = c("green", "red", "blue"))
dat = read.table(file = "input.txt", dec = ",")
#СТроим ряд динамики (Временной ряд)
myts = ts(dat[,1], start = c(2017,8), end = c(2018,7), frequency = 12)
#Средний уровень ряда динамики
mn = (sum(dat[,1]) - ((dat[1,1] + dat[length(dat),1]) / 2)) / (length(dat[,1]) - 1)
#Определяем наличие тренда
flag = (dat[1,1] >= mn)
R = 0
for (i in 1:length(dat[,1])) {
fl = TRUE
if(dat[i,1] >= mn && flag == FALSE && fl == TRUE){
fl = FALSE
}
if(dat[i,1] < mn && flag == FALSE && fl == TRUE){
flag = TRUE
R = R + 1
fl = FALSE
}
if(dat[i,1] >= mn && flag == TRUE && fl == TRUE){
flag = FALSE
R = R + 1
fl = FALSE
}
if(dat[i,1] < mn && flag == TRUE && fl == TRUE){
fl = FALSE
}
}
p = 0.954
t = 2
R_mn = (length(dat[,1]) + 1) / 2
sgm = sqrt(length(dat[,1]) - 1) / 2
flag = FALSE
if(round(R_mn - t*sgm) <= R && R <= round(R_mn + t*sgm)){
flag = TRUE
}
flag
dat = read.table(file = "input.txt", dec = ",")
#СТроим ряд динамики (Временной ряд)
myts = ts(dat[,1], start = c(2017,8), end = c(2018,7), frequency = 12)
#Средний уровень ряда динамики
mn = (sum(dat[,1]) - ((dat[1,1] + dat[length(dat),1]) / 2)) / (length(dat[,1]) - 1)
#Определяем наличие тренда
flag = (dat[1,1] >= mn)
R = 0
for (i in 1:length(dat[,1])) {
fl = TRUE
if(dat[i,1] >= mn && flag == FALSE && fl == TRUE){
fl = FALSE
}
if(dat[i,1] < mn && flag == FALSE && fl == TRUE){
flag = TRUE
R = R + 1
fl = FALSE
}
if(dat[i,1] >= mn && flag == TRUE && fl == TRUE){
flag = FALSE
R = R + 1
fl = FALSE
}
if(dat[i,1] < mn && flag == TRUE && fl == TRUE){
fl = FALSE
}
}
p = 0.954
t = 2
R_mn = (length(dat[,1]) + 1) / 2
sgm = sqrt(length(dat[,1]) - 1) / 2
flag = FALSE
if(round(R_mn - t*sgm) <= R && R <= round(R_mn + t*sgm)){
flag = TRUE
}
flag
install.packages("pracma")
dat[,2] = movavg(dat[,1], 3, type = "s")
dat = read.table(file = "input.txt", dec = ",")
#СТроим ряд динамики (Временной ряд)
myts = ts(dat[,1], start = c(2017,8), end = c(2018,7), frequency = 12)
#Средний уровень ряда динамики
mn = (sum(dat[,1]) - ((dat[1,1] + dat[length(dat),1]) / 2)) / (length(dat[,1]) - 1)
#Определяем наличие тренда
flag = (dat[1,1] >= mn)
R = 0
for (i in 1:length(dat[,1])) {
fl = TRUE
if(dat[i,1] >= mn && flag == FALSE && fl == TRUE){
fl = FALSE
}
if(dat[i,1] < mn && flag == FALSE && fl == TRUE){
flag = TRUE
R = R + 1
fl = FALSE
}
if(dat[i,1] >= mn && flag == TRUE && fl == TRUE){
flag = FALSE
R = R + 1
fl = FALSE
}
if(dat[i,1] < mn && flag == TRUE && fl == TRUE){
fl = FALSE
}
}
p = 0.954
t = 2
R_mn = (length(dat[,1]) + 1) / 2
sgm = sqrt(length(dat[,1]) - 1) / 2
flag = FALSE
if(round(R_mn - t*sgm) <= R && R <= round(R_mn + t*sgm)){
flag = TRUE
}
flag
#Сглаживание ряда методом скользящей средней
library("pracma")
dat[,2] = movavg(dat[,1], 3, type = "s")
#Сглаживание ряда методом аналитического выравнивания
center = round(length(dat[,1]) / 2)
if(mod(length(dat[,1]), 2) == 1){
dat[center,3] = 0
for(i in 1:(center - 1)){
dat[center - i,3] = -i
dat[center + i,3] = i
}
}else{
for(i in 0:(center - 1)){
dat[center - i,3] = -(1 + 2*i)
dat[center + i + 1,3] = (1 + 2*i)
}
}
a_0 = (sum(dat[,1]) / length(dat[,1]))
a_1 = 0
for (i in 1:length(dat[,1])) {
a_1 = a_1 + dat[i,1]*dat[i,3]
}
a_1 = a_1 / sum((dat[3])^2)
for (i in 1:length(dat[,1])) {
dat[i,4] = a_0 + dat[i,3]*a_1
}
#Прогнозируем следующее значение
y_next = a_0 + a_1*((dat[length(dat[,3]), 3] - dat[length(dat[,3]) - 1, 3]) + dat[length(dat[,3]),3])
#Наносим всё на график
plot(myts, lwd = 3, col = "green", main="Time series", ylab = "Value")
lines(ts(dat[,2], start = c(2018,1), end = c(2019,7), frequency = 12), col = "red", lwd = 3)
lines(ts(dat[,4], start = c(2018,1), end = c(2019,7), frequency = 12), col = "blue", lwd = 3)
legend("bottomleft", legend = c("1", "2", "3"), fill = c("green", "red", "blue"))
#Строим ряд динамики (Временной ряд)
myts = ts(dat[,1], start = c(2017,8), end = c(2018,7), frequency = 12)
dat = read.table(file = "input.txt", dec = ",")
#Строим ряд динамики (Временной ряд)
myts = ts(dat[,1], start = c(2017,8), end = c(2018,7), frequency = 12)
#Средний уровень ряда динамики
mn = (sum(dat[,1]) - ((dat[1,1] + dat[length(dat),1]) / 2)) / (length(dat[,1]) - 1)
#Определяем наличие тренда
flag = (dat[1,1] >= mn)
R = 0
for (i in 1:length(dat[,1])) {
fl = TRUE
if(dat[i,1] >= mn && flag == FALSE && fl == TRUE){
fl = FALSE
}
if(dat[i,1] < mn && flag == FALSE && fl == TRUE){
flag = TRUE
R = R + 1
fl = FALSE
}
if(dat[i,1] >= mn && flag == TRUE && fl == TRUE){
flag = FALSE
R = R + 1
fl = FALSE
}
if(dat[i,1] < mn && flag == TRUE && fl == TRUE){
fl = FALSE
}
}
p = 0.954
t = 2
R_mn = (length(dat[,1]) + 1) / 2
sgm = sqrt(length(dat[,1]) - 1) / 2
flag = FALSE
if(round(R_mn - t*sgm) <= R && R <= round(R_mn + t*sgm)){
flag = TRUE
}
flag
#Сглаживание ряда методом скользящей средней
library("pracma")
dat[,2] = movavg(dat[,1], 3, type = "s")
#Сглаживание ряда методом аналитического выравнивания
center = round(length(dat[,1]) / 2)
if(mod(length(dat[,1]), 2) == 1){
dat[center,3] = 0
for(i in 1:(center - 1)){
dat[center - i,3] = -i
dat[center + i,3] = i
}
}else{
for(i in 0:(center - 1)){
dat[center - i,3] = -(1 + 2*i)
dat[center + i + 1,3] = (1 + 2*i)
}
}
a_0 = (sum(dat[,1]) / length(dat[,1]))
a_1 = 0
for (i in 1:length(dat[,1])) {
a_1 = a_1 + dat[i,1]*dat[i,3]
}
a_1 = a_1 / sum((dat[3])^2)
for (i in 1:length(dat[,1])) {
dat[i,4] = a_0 + dat[i,3]*a_1
}
#Прогнозируем следующее значение
y_next = a_0 + a_1*((dat[length(dat[,3]), 3] - dat[length(dat[,3]) - 1, 3]) + dat[length(dat[,3]),3])
#Наносим всё на график
plot(myts, lwd = 3, col = "green", main="Time series", ylab = "Value")
lines(ts(dat[,2], start = c(2017,8), end = c(2018,7), frequency = 12), col = "red", lwd = 3)
lines(ts(dat[,4], start = c(2017,8), end = c(2018,7), frequency = 12), col = "blue", lwd = 3)
legend("bottomleft", legend = c("1", "2", "3"), fill = c("green", "red", "blue"))
dat
View(dat)
myts = ts(dat[,1], start = c(2017,8), end = c(2018,7), frequency = 12)
#Средний уровень ряда динамики
mn = (sum(dat[,1]) - ((dat[1,1] + dat[length(dat),1]) / 2)) / (length(dat[,1]) - 1)
#Определяем наличие тренда
flag = (dat[1,1] >= mn)
R = 0
for (i in 1:length(dat[,1])) {
fl = TRUE
if(dat[i,1] >= mn && flag == FALSE && fl == TRUE){
fl = FALSE
}
if(dat[i,1] < mn && flag == FALSE && fl == TRUE){
flag = TRUE
R = R + 1
fl = FALSE
}
if(dat[i,1] >= mn && flag == TRUE && fl == TRUE){
flag = FALSE
R = R + 1
fl = FALSE
}
if(dat[i,1] < mn && flag == TRUE && fl == TRUE){
fl = FALSE
}
}
p = 0.954
t = 2
R_mn = (length(dat[,1]) + 1) / 2
sgm = sqrt(length(dat[,1]) - 1) / 2
flag = FALSE
if(round(R_mn - t*sgm) <= R && R <= round(R_mn + t*sgm)){
flag = TRUE
}
flag
center = round(length(dat[,1]) / 2)
if(mod(length(dat[,1]), 2) == 1){
dat[center,3] = 0
for(i in 1:(center - 1)){
dat[center - i,3] = -i
dat[center + i,3] = i
}
}else{
for(i in 0:(center - 1)){
dat[center - i,3] = -(1 + 2*i)
dat[center + i + 1,3] = (1 + 2*i)
}
}
a_0 = (sum(dat[,1]) / length(dat[,1]))
a_1 = 0
for (i in 1:length(dat[,1])) {
a_1 = a_1 + dat[i,1]*dat[i,3]
}
a_1 = a_1 / sum((dat[3])^2)
for (i in 1:length(dat[,1])) {
dat[i,4] = a_0 + dat[i,3]*a_1
center = round(length(dat[,1]) / 2)
if(mod(length(dat[,1]), 2) == 1){
dat[center,3] = 0
for(i in 1:(center - 1)){
dat[center - i,3] = -i
dat[center + i,3] = i
}
}else{
for(i in 0:(center - 1)){
dat[center - i,3] = -(1 + 2*i)
dat[center + i + 1,3] = (1 + 2*i)
}
}
a_0 = (sum(dat[,1]) / length(dat[,1]))
a_1 = 0
for (i in 1:length(dat[,1])) {
a_1 = a_1 + dat[i,1]*dat[i,3]
}
a_1 = a_1 / sum((dat[3])^2)
for (i in 1:length(dat[,1])) {
dat[i,4] = a_0 + dat[i,3]*a_1
}
center = round(length(dat[,1]) / 2)
if(mod(length(dat[,1]), 2) == 1){
dat[center,3] = 0
for(i in 1:(center - 1)){
dat[center - i,3] = -i
dat[center + i,3] = i
}
}else{
for(i in 0:(center - 1)){
dat[center - i,3] = -(1 + 2*i)
dat[center + i + 1,3] = (1 + 2*i)
}
}
a_0 = (sum(dat[,1]) / length(dat[,1]))
a_1 = 0
for (i in 1:length(dat[,1])) {
a_1 = a_1 + dat[i,1]*dat[i,3]
}
a_1 = a_1 / sum((dat[3])^2)
for (i in 1:length(dat[,1])) {
dat[i,4] = a_0 + dat[i,3]*a_1
}
dat[4]
source("D:/vkiad/lab4/lab4.R", encoding = 'UTF-8')
dat[,2] = movavg(dat[,1], 3, type = "s")
dat[2]
y_next = a_0 + a_1*((dat[length(dat[,3]), 3] - dat[length(dat[,3]) - 1, 3]) + dat[length(dat[,3]),3])
y_next
plot(myts, lwd = 3, col = "green", main="Time series", ylab = "Value")
lines(ts(dat[,2], start = c(2017,8), end = c(2018,7), frequency = 12), col = "red", lwd = 3)
lines(ts(dat[,4], start = c(2017,8), end = c(2018,7), frequency = 12), col = "blue", lwd = 3)
legend("bottomleft", legend = c("1", "2", "3"), fill = c("green", "red", "blue"))
dat[,2] = movavg(dat[,1], 3, type = "s")
library("pracma")
dat[,2] = movavg(dat[,1], 3, type = "s")
dat[2]
center = round(length(dat[,1]) / 2)
if(mod(length(dat[,1]), 2) == 1){
dat[center,3] = 0
for(i in 1:(center - 1)){
dat[center - i,3] = -i
dat[center + i,3] = i
}
}else{
for(i in 0:(center - 1)){
dat[center - i,3] = -(1 + 2*i)
dat[center + i + 1,3] = (1 + 2*i)
}
}
a_0 = (sum(dat[,1]) / length(dat[,1]))
a_1 = 0
for (i in 1:length(dat[,1])) {
a_1 = a_1 + dat[i,1]*dat[i,3]
}
a_1 = a_1 / sum((dat[3])^2)
for (i in 1:length(dat[,1])) {
dat[i,4] = a_0 + dat[i,3]*a_1
}
dat[4]
y_next = a_0 + a_1*((dat[length(dat[,3]), 3] - dat[length(dat[,3]) - 1, 3]) + dat[length(dat[,3]),3])
y_next
plot(myts, lwd = 3, col = "green", main="Time series", ylab = "Value")
lines(ts(dat[,2], start = c(2017,8), end = c(2018,7), frequency = 12), col = "red", lwd = 3)
lines(ts(dat[,4], start = c(2017,8), end = c(2018,7), frequency = 12), col = "blue", lwd = 3)
legend("bottomleft", legend = c("1", "2", "3"), fill = c("green", "red", "blue"))
library("pracma")
dat[,2] = movavg(dat[,1], 3, type = "s")
dat[2]
myts = ts(dat[,1], start = c(2017,8), end = c(2018,7), frequency = 12)
#Средний уровень ряда динамики
mn = (sum(dat[,1]) - ((dat[1,1] + dat[length(dat),1]) / 2)) / (length(dat[,1]) - 1)
#Определяем наличие тренда
flag = (dat[1,1] >= mn)
R = 0
for (i in 1:length(dat[,1])) {
fl = TRUE
if(dat[i,1] >= mn && flag == FALSE && fl == TRUE){
fl = FALSE
}
if(dat[i,1] < mn && flag == FALSE && fl == TRUE){
flag = TRUE
R = R + 1
fl = FALSE
}
if(dat[i,1] >= mn && flag == TRUE && fl == TRUE){
flag = FALSE
R = R + 1
fl = FALSE
}
if(dat[i,1] < mn && flag == TRUE && fl == TRUE){
fl = FALSE
}
}
p = 0.954
t = 2
R_mn = (length(dat[,1]) + 1) / 2
sgm = sqrt(length(dat[,1]) - 1) / 2
flag = FALSE
if(round(R_mn - t*sgm) <= R && R <= round(R_mn + t*sgm)){
flag = TRUE
}
flag
dat = read.table(file = "input.txt", dec = ",")
myts = ts(dat[,1], start = c(2017,8), end = c(2018,7), frequency = 12)
#Средний уровень ряда динамики
mn = (sum(dat[,1]) - ((dat[1,1] + dat[length(dat),1]) / 2)) / (length(dat[,1]) - 1)
#Определяем наличие тренда
n <- length(dat[,1])
avery <-(sum(dat[1]) - dat[1,1]/2 - dat[1, length(dat[1])]/2)/(length(dat[,1])-1)
averr <- (length(dat[,1]) + 1)/2
sigmar <- sqrt(averr-1)/2
t <- 2
(averr+1 - t*sqrt(n-1))/2
avery
(averr+1 + t*sqrt(n-1))/2
myts = ts(dat[,1], start = c(2017,8), end = c(2018,7), frequency = 12)
#Средний уровень ряда динамики
mn = (sum(dat[,1]) - ((dat[1,1] + dat[length(dat),1]) / 2)) / (length(dat[,1]) - 1)
#Определяем наличие тренда
n <- length(dat[,1])
avery <-(sum(dat[1]) - dat[1,1]/2 - dat[1, length(dat[1])]/2)/(length(dat[,1])-1)
averr <- (length(dat[,1]) + 1)/2
sigmar <- sqrt(averr-1)/2
t <- 2
(averr+1 - t*sqrt(n-1))/2
avery
(averr+1 + t*sqrt(n-1))/2
library("pracma")
dat[,2] = movavg(dat[,1], 3, type = "s")
dat[2]
center = round(length(dat[,1]) / 2)
if(mod(length(dat[,1]), 2) == 1){
dat[center,3] = 0
for(i in 1:(center - 1)){
dat[center - i,3] = -i
dat[center + i,3] = i
}
}else{
for(i in 0:(center - 1)){
dat[center - i,3] = -(1 + 2*i)
dat[center + i + 1,3] = (1 + 2*i)
}
}
a_0 = (sum(dat[,1]) / length(dat[,1]))
a_1 = 0
for (i in 1:length(dat[,1])) {
a_1 = a_1 + dat[i,1]*dat[i,3]
}
a_1 = a_1 / sum((dat[3])^2)
for (i in 1:length(dat[,1])) {
dat[i,4] = a_0 + dat[i,3]*a_1
}
dat[4]
y_next = a_0 + a_1*((dat[length(dat[,3]), 3] - dat[length(dat[,3]) - 1, 3]) + dat[length(dat[,3]),3])
y_next
plot(myts, lwd = 3, col = "green", main="Time series", ylab = "Value")
lines(ts(dat[,2], start = c(2017,8), end = c(2018,7), frequency = 12), col = "red", lwd = 3)
lines(ts(dat[,4], start = c(2017,8), end = c(2018,7), frequency = 12), col = "blue", lwd = 3)
legend("bottomleft", legend = c("1", "2", "3"), fill = c("green", "red", "blue"))
